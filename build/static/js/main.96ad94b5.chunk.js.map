{"version":3,"sources":["components/Theme/Global.styles.js","components/Theme/Theme.js","components/Button/Button.style.js","components/Hero/Hero.js","components/TodoForm/schema.js","components/TodoForm/TodoForm.js","components/FilterList/FilterList.style.js","components/FilterList/FilterItem/FilterItem.style.js","components/FilterList/FilterItem/FilterItem.js","components/FilterList/FilterList.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","toggleBorder","background","darkTheme","Button","styled","button","props","secondary","css","ButtonSmall","Hero","this","name","handleclick","handleTheme","className","onClick","type","React","Component","TodoItemSchema","yup","shape","title","required","description","min","ensure","priority","max","default","initValues","id","isEditable","done","TodoForm","handleSubmit","initialValues","validationSchema","onSubmit","values","errors","isSubmitting","htmlFor","placeholder","component","Filter","nav","FilterLink","span","FilterItemList","li","FilterItem","filterTasks","filterName","handleFilter","FilterList","taskList","clearCompleted","length","TodoItem","taskDone","handleDone","taskDelete","handleDelete","taskEdit","handleEdit","index","draggableId","provided","draggableProps","ref","innerRef","dragHandleProps","TodoList","deleteItem","editItem","saveOrderTasks","onDragEnd","result","source","destination","droppableId","droppableProps","map","item","names","App","toggleTheme","state","setState","randomName","count","counter","startIndex","endIndex","splice","removed","prevState","list","showItems","filter","itemId","newList","addTask","uuid","userName","themeMode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96ad94b5.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background-color: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.50s linear;\n\n\t/* color: var.$font-color-base;\n\tbackground-color: var.$color-secondary; */\n  }\n`\n","export const lightTheme = {\n\tbody: '#ffffff',\n\ttext: '#0a155a',\n\ttoggleBorder: '#ffffff',\n\tbackground: '#0a155a',\n}\n\nexport const darkTheme = {\n\tbody: '#010319',\n\ttext: '#ffffff',\n\ttoggleBorder: '#6B8096',\n\tbackground: '#d103fc',\n}\n","import styled, { css } from 'styled-components'\n\nexport const Button = styled.button`\n\tdisplay: block;\n\tborder-radius: 3px;\n\tpadding: 0.5rem 1rem;\n\twidth: 10rem;\n\tfont-weight: 600;\n\tcursor: pointer;\n\tborder: 2px solid ${({ theme }) => theme.text};\n\tbackground: transparent;\n\tcolor: ${({ theme }) => theme.text};\n\ttransition: all 0.25s ease;\n\n\t${(props) =>\n\t\tprops.secondary &&\n\t\tcss`\n\t\t\tbackground: ${({ theme }) => theme.text};\n\t\t\tcolor: white;\n\t\t`}\n\n\t&:hover {\n\t\tborder: 2px solid ${(props) => props.theme.background};\n\t\tbackground: ${(props) =>\n\t\t\tprops.secondary ? 'transparent' : props.theme.background};\n\t\tcolor: ${(props) => (props.secondary ? props.theme.background : 'white')};\n\t}\n`\n\nexport const ButtonSmall = styled(Button)`\n\twidth: 1.5rem;\n\theight: 1.5rem;\n\tpadding: 0.2rem;\n\tfont-size: 0.5rem;\n`\n\nexport default Button\n","import React from 'react'\nimport './Hero.scss'\nimport { Button } from '../Button/Button.style'\n\nclass Hero extends React.Component {\n\trender() {\n\t\tconst { name, handleclick, handleTheme } = this.props\n\t\treturn (\n\t\t\t<header className=\"header-center\">\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"icon-brightness-contrast icon-theme\"\n\t\t\t\t\tonClick={handleTheme}\n\t\t\t\t></span>\n\t\t\t\t<h1>\n\t\t\t\t\tWhat's up, <span className=\"text-highlight\">{name}</span>!\n\t\t\t\t</h1>\n\t\t\t\t<Button type=\"button\" onClick={handleclick}>\n\t\t\t\t\tRandom name\n\t\t\t\t</Button>\n\t\t\t</header>\n\t\t)\n\t}\n}\n\nexport default Hero\n","import * as yup from 'yup'\n\nexport const TodoItemSchema = yup.object().shape({\n\ttitle: yup.string().required('Title is a required field'),\n\tdescription: yup.string().min(5).ensure(),\n\tpriority: yup.number().min(0).max(2).default(0),\n})\n","import React from 'react'\nimport { TodoItemSchema } from './schema'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\n\nimport '../Input/Input.scss'\nimport './TodoForm.scss'\n\nimport Button from '../Button'\n\nconst initValues = {\n\tid: '',\n\ttitle: '',\n\tdescription: '',\n\tpriority: 0,\n\tisEditable: false,\n\tdone: false,\n}\n\nclass TodoForm extends React.Component {\n\trender() {\n\t\tconst { handleSubmit } = this.props\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={initValues}\n\t\t\t\tvalidationSchema={TodoItemSchema}\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t>\n\t\t\t\t{({ values, errors, handleSubmit, isSubmitting }) => (\n\t\t\t\t\t<Form className=\"form\">\n\t\t\t\t\t\t<h2>ToDo tasks</h2>\n\t\t\t\t\t\t<div className=\"form__group\">\n\t\t\t\t\t\t\t<label className=\"input\" htmlFor=\"title\">\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tid=\"title\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\tclassName=\"input__field\"\n\t\t\t\t\t\t\t\t\tplaceholder=\" \"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className=\"input__label\">Title</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\tclassName=\"form__error\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form__group\">\n\t\t\t\t\t\t\t<label className=\"input\" htmlFor=\"description\">\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tclassName=\"input__field\"\n\t\t\t\t\t\t\t\t\tplaceholder=\" \"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className=\"input__label\">Description</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\tclassName=\"form__error\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"form__group\">\n\t\t\t\t\t\t\t<label className=\"input\">\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tid=\"priority\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tname=\"priority\"\n\t\t\t\t\t\t\t\t\tclassName=\"input__field\"\n\t\t\t\t\t\t\t\t\tplaceholder=\" \"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className=\"input__label\">Priority</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<ErrorMessage name=\"priority\" component=\"p\" />\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"form__group\">\n\t\t\t\t\t\t\t<Button type=\"submit\">Add task</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t)\n\t}\n}\n\nexport default TodoForm\n","import styled from 'styled-components'\n\nexport const Filter = styled.nav`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 1rem 0.5rem;\n\tfont-size: 0.7rem;\n\tfont-weight: 600;\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.text};\n`\n\nexport const FilterLink = styled.span`\n\tcursor: pointer;\n\n\t&:hover {\n\t\tcolor: ${({ theme }) => theme.toggleBorder};\n\t}\n`\n","import styled from 'styled-components'\n\nconst FilterItemList = styled.li`\n\tpadding: 0 0.5rem;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tcolor: ${({ theme }) => theme.toggleBorder};\n\t}\n`\nexport default FilterItemList\n","import React from 'react'\n\nimport FilterItemList from './FilterItem.style'\n\nclass FilterItem extends React.Component {\n\tfilterTasks = (filterName) => {\n\t\tthis.props.handleFilter(filterName)\n\t}\n\trender() {\n\t\tconst { name } = this.props\n\t\treturn (\n\t\t\t<FilterItemList onClick={() => this.filterTasks(name)}>\n\t\t\t\t{name}\n\t\t\t</FilterItemList>\n\t\t)\n\t}\n}\n\nexport default FilterItem\n","import React from 'react'\nimport { Filter, FilterLink } from './FilterList.style'\nimport FilterItem from './FilterItem'\nclass FilterList extends React.Component {\n\trender() {\n\t\tconst { taskList, clearCompleted, handleFilter } = this.props\n\t\treturn (\n\t\t\t<Filter>\n\t\t\t\t<span>{taskList.length} items left</span>\n\t\t\t\t<ul className=\"flex\">\n\t\t\t\t\t<FilterItem name=\"all\" handleFilter={handleFilter} />\n\t\t\t\t\t<FilterItem name=\"actived\" handleFilter={handleFilter} />\n\t\t\t\t\t<FilterItem name=\"completed\" handleFilter={handleFilter} />\n\t\t\t\t</ul>\n\t\t\t\t<FilterLink onClick={clearCompleted}>Clear completed</FilterLink>\n\t\t\t</Filter>\n\t\t)\n\t}\n}\n\nexport default FilterList\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport './TodoItem.scss'\n\nimport { ButtonSmall } from '../Button/Button.style'\nclass TodoItem extends React.Component {\n\ttaskDone = (id) => {\n\t\tthis.props.handleDone(id)\n\t}\n\n\ttaskDelete = (id) => {\n\t\tthis.props.handleDelete(id)\n\t}\n\n\ttaskEdit = (id) => {\n\t\tthis.props.handleEdit(id)\n\t}\n\n\trender() {\n\t\tconst { id, title, done, isEditable, index } = this.props\n\t\treturn (\n\t\t\t<Draggable key={id} draggableId={id} index={index}>\n\t\t\t\t{(provided) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tclassName=\"todo-item flex-between-center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"flex-between-center\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tclassName=\"checkbox\"\n\t\t\t\t\t\t\t\tname={title}\n\t\t\t\t\t\t\t\tonClick={() => this.taskDone(id)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{!isEditable && (\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\thtmlFor={title}\n\t\t\t\t\t\t\t\t\tclassName={`todo-item__label ${done ? '--is-disabled' : ''}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{isEditable && <input type=\"text\" />}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"flex-end\">\n\t\t\t\t\t\t\t<ButtonSmall\n\t\t\t\t\t\t\t\tclassName=\"icon-pencil mr-1\"\n\t\t\t\t\t\t\t\tonClick={() => this.taskEdit(id)}\n\t\t\t\t\t\t\t></ButtonSmall>\n\t\t\t\t\t\t\t<ButtonSmall\n\t\t\t\t\t\t\t\tclassName=\"icon-cross\"\n\t\t\t\t\t\t\t\tonClick={() => this.taskDelete(id)}\n\t\t\t\t\t\t\t></ButtonSmall>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t)\n\t}\n}\n\nexport default TodoItem\n","import React from 'react'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\n\nimport './TodoList.scss'\n\nimport FilterList from '../FilterList'\nimport TodoItem from '../TodoItem'\nclass TodoList extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\ttaskList,\n\t\t\tdeleteItem,\n\t\t\teditItem,\n\t\t\tdone,\n\t\t\tsaveOrderTasks,\n\t\t\tclearCompleted,\n\t\t\thandleFilter,\n\t\t} = this.props\n\n\t\treturn (\n\t\t\t<section className=\"todo-list\">\n\t\t\t\t<FilterList\n\t\t\t\t\ttaskList={taskList}\n\t\t\t\t\tclearCompleted={clearCompleted}\n\t\t\t\t\thandleFilter={handleFilter}\n\t\t\t\t/>\n\t\t\t\t<DragDropContext\n\t\t\t\t\tonDragEnd={(result) => {\n\t\t\t\t\t\tconst { source, destination } = result\n\t\t\t\t\t\tif (!destination) return\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsource.index === destination.index &&\n\t\t\t\t\t\t\tsource.droppableId === destination.droppableId\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\tsaveOrderTasks(taskList, source.index, destination.index)\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Droppable droppableId=\"tasks\">\n\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t<ul {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t{taskList.map((item, index) => (\n\t\t\t\t\t\t\t\t\t<TodoItem\n\t\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\t\t\t\ttitle={item.title}\n\t\t\t\t\t\t\t\t\t\tdone={item.done}\n\t\t\t\t\t\t\t\t\t\tisEditable={item.isEditable}\n\t\t\t\t\t\t\t\t\t\thandleDone={done}\n\t\t\t\t\t\t\t\t\t\thandleDelete={deleteItem}\n\t\t\t\t\t\t\t\t\t\thandleEdit={editItem}\n\t\t\t\t\t\t\t\t\t\thandleFilter={handleFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Droppable>\n\t\t\t\t</DragDropContext>\n\t\t\t\t{taskList.length > 1 && (\n\t\t\t\t\t<p className=\"tab\">Drag and drop to reorder list</p>\n\t\t\t\t)}\n\t\t\t</section>\n\t\t)\n\t}\n}\n\nexport default TodoList\n","import React from 'react'\nimport { v4 as uuid } from 'uuid'\nimport { ThemeProvider } from 'styled-components'\nimport { GlobalStyles } from '../Theme/Global.styles'\nimport { lightTheme, darkTheme } from '../Theme/Theme'\n\nimport './App.scss'\n\nimport Hero from '../Hero'\nimport TodoForm from '../TodoForm'\n// import Input from '../Input'\nimport TodoList from '../TodoList'\n\nconst names = ['Aran', 'Kitty', 'Jane']\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tuserName: '',\n\t\t\tcounter: 0,\n\t\t\ttheme: 'dark',\n\t\t\tshowItems: 'all',\n\t\t\tlist: [],\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({ userName: names })\n\t}\n\n\ttoggleTheme = () => {\n\t\tif (this.state.theme === 'dark') this.setState({ theme: 'light' })\n\t\tif (this.state.theme === 'light') this.setState({ theme: 'dark' })\n\t}\n\n\trandomName = () => {\n\t\tlet count = this.state.counter + 1\n\t\tcount = count % names.length\n\t\tthis.setState({ counter: count })\n\t}\n\n\tsaveOrderTasks = (taskList, startIndex, endIndex) => {\n\t\tconst result = [...taskList]\n\t\tconst [removed] = result.splice(startIndex, 1)\n\t\tresult.splice(endIndex, 0, removed)\n\t\tthis.setState((prevState) => ({\n\t\t\t...prevState,\n\t\t\tlist: result,\n\t\t}))\n\t}\n\n\thandleFilter = (filterName) => {\n\t\tthis.setState({ showItems: filterName })\n\t}\n\n\tclearCompleted = () => {\n\t\tthis.setState({ list: this.state.list.filter((item) => !item.done) })\n\t}\n\n\ttaskDone = (itemId) => {\n\t\tconst newList = this.state.list.map((item) => {\n\t\t\tif (item.id === itemId) {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\tdone: !item.done,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn item\n\t\t\t}\n\t\t})\n\t\tthis.setState({ list: newList })\n\t}\n\n\ttaskDelete = (itemId) => {\n\t\tthis.setState({\n\t\t\tlist: this.state.list.filter((item) => item.id !== itemId),\n\t\t})\n\t}\n\n\ttaskEdit = (itemId) => {\n\t\tconst newList = this.state.list.map((item) => {\n\t\t\tif (item.id === itemId) {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\tisEditable: !item.isEditable,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn item\n\t\t\t}\n\t\t})\n\t\tthis.setState({ list: newList })\n\t}\n\n\taddTask = (values) => {\n\t\tconst newList = { ...values, id: uuid() }\n\t\tthis.setState({ list: [...this.state.list, newList] })\n\t}\n\n\trender() {\n\t\tconst { counter, theme } = this.state\n\t\tconst themeMode = theme === 'light' ? lightTheme : darkTheme\n\t\tlet { list, showItems } = this.state\n\n\t\tif (showItems === 'all') {\n\t\t\tlist = this.state.list\n\t\t} else if (showItems === 'actived') {\n\t\t\tlist = list.filter((item) => !item.done)\n\t\t} else if (showItems === 'completed') {\n\t\t\tlist = list.filter((item) => item.done)\n\t\t}\n\n\t\treturn (\n\t\t\t<ThemeProvider theme={themeMode}>\n\t\t\t\t<GlobalStyles />\n\t\t\t\t<div className=\"app\">\n\t\t\t\t\t<Hero\n\t\t\t\t\t\tname={names[counter]}\n\t\t\t\t\t\thandleclick={this.randomName}\n\t\t\t\t\t\thandleTheme={this.toggleTheme}\n\t\t\t\t\t/>\n\t\t\t\t\t<TodoForm handleSubmit={this.addTask} />\n\t\t\t\t\t{/* <Input handleEnter={this.addTask} /> */}\n\t\t\t\t\t<TodoList\n\t\t\t\t\t\ttaskList={list}\n\t\t\t\t\t\tdeleteItem={this.taskDelete}\n\t\t\t\t\t\teditItem={this.taskEdit}\n\t\t\t\t\t\tdone={this.taskDone}\n\t\t\t\t\t\tsaveOrderTasks={this.saveOrderTasks}\n\t\t\t\t\t\tclearCompleted={this.clearCompleted}\n\t\t\t\t\t\thandleFilter={this.handleFilter}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</ThemeProvider>\n\t\t)\n\t}\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './assets/styles/main.scss'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}